{"version":3,"sources":["features/videoContainer/videoSlice.js","features/videoDuration/VideoDuration.js","features/videoLink/VideoLink.js","features/wordFrequency/WordFrequency.js","features/videosByDuration/VideosByDuration.js","features/utilComponents/UtilTable.js","features/channelLink/ChannelLink.js","features/videoList/VideoList.js","features/channelContainer/channelSlice.js","features/channelContainer/ChannelContainer.js","features/videoContainer/VideoContainer.js","bookmarklet.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["videoSlice","createSlice","name","initialState","videos","reducers","setVideoList","state","action","payload","addVideos","actions","getVideos","getVideosByDuration","filter","video","isNaN","durationInSeconds","sort","video1","video2","parseDuration","duration","durationString","hours","mins","seconds","durationComponents","split","length","console","debug","VideoDuration","props","watched","aria-label","dateTime","generateLink","id","GetVideo","useSelector","title","find","getVideoByName","videoTitle","VideoLink","children","showDuration","SearchVideos","keyword","toLowerCase","includes","getVideosWithTitleSubstring","searchTerm","map","i","className","classes","href","WordFrequency","wordList","words","blockList","threshold","Object","entries","word","count","first","curateWordList","useState","activeWord","updateWord","onClick","target","nodeName","parentElement","dataset","data-word","type","VideosByDuration","durationList","UtilTable","keys","this","data","object","rowIndex","key","headers","header","headerRowItems","renderHeaderRow","row","renderRow","attributeNames","renderTHeadAndTFoot","renderTBody","React","Component","ChannelLink","channel","prepareData","VideoList","channelSlice","channels","setChannelList","ordered","second","addChannels","getOneVideoChannels","getMultiVideoChannels","ChannelContainer","oneVideoChannels","channelName","multiVideoChannels","open","querySetAttribute","query","attribute","value","document","querySelectorAll","forEach","elem","processInput","videoData","reduce","acc","current","wordFreq","channelNames","NaN","reverse","sec","parseInt","videoDurationInSeconds","push","titleWords","replace","VideoContainer","dispatch","useDispatch","processedInputs","jsonVideo","localStorage","getItem","jsonChannels","jsonWordFreq","JSON","parse","setItem","stringify","querySelector","classList","add","App","hash","undefined","addNewVideosLabel","location","decodedHash","decodeURIComponent","slice","setState","e","preventDefault","additionalWatchList","newData","error","warn","navigator","clipboard","readText","then","scrollIntoView","src","alt","dangerouslySetInnerHTML","__html","rel","jumpToId","data-href","onSubmit","appendNewWatchListItems","bind","loadDataFromClipboard","rows","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f26fc07b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const videoSlice = createSlice({\n\tname: 'videos',\n\tinitialState: {\n\t\tvideos: [],\n\t},\n\treducers: {\n\t\tsetVideoList: (state, action) => {\n\t\t\tstate.videos = action.payload;\n\t\t},\n\t\taddVideos: (state, action) => {\n\t\t\tstate.videos = [...state.videos, ...action.payload];\n\t\t},\n\t},\n});\n\nexport const { setVideoList, addVideos } = videoSlice.actions;\n\nexport const getVideos = (state) => state.videos.videos;\nexport const getVideoByName = (state, title) =>\n\tstate.videos.videos.find(({ video }) => video.title === title);\nexport const getVideosWithTitleSubstring = (state, keyword) =>\n\tstate.videos.videos.filter(({ video }) =>\n\t\tvideo.title.toLowerCase().includes(keyword)\n\t);\nexport const getVideosByDuration = (state) =>\n\t/* Sort into ascending order, NaN values filtered */\n\tstate.videos.videos\n\t\t.filter(({ video }) => !isNaN(video.durationInSeconds))\n\t\t.sort(({ video: video1 }, { video: video2 }) => {\n\t\t\tconst { durationInSeconds: d1 } = video1;\n\t\t\tconst { durationInSeconds: d2 } = video2;\n\t\t\treturn d1 - d2;\n\t\t});\n\nexport default videoSlice.reducer;\n","function parseDuration(duration) {\r\n\tif (!duration) {\r\n\t\tconsole.debug('No duration on this video');\r\n\t\treturn;\r\n\t}\r\n\tconst durationComponents = duration.split(':');\r\n\tlet durationString, hours, mins, seconds;\r\n\r\n\tswitch (durationComponents.length) {\r\n\t\tcase 2:\r\n\t\t\t[mins, seconds] = durationComponents;\r\n\t\t\tdurationString = `${mins}M${seconds}S`;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 3:\r\n\t\t\t[hours, mins, seconds] = durationComponents;\r\n\t\t\tdurationString = `${hours}H${mins}M${seconds}S`;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn `PT${durationString}`;\r\n}\r\n\r\nexport default function VideoDuration(props) {\r\n\tconst { duration, watched } = props.video;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{watched && <span aria-label=\"Watched video\">👁 </span>}\r\n\t\t\t<time dateTime={parseDuration(duration)}>{duration}</time>{' '}\r\n\t\t</>\r\n\t);\r\n}\r\n","import { useSelector } from 'react-redux';\n\nimport {\n\tgetVideoByName,\n\tgetVideosWithTitleSubstring,\n} from '../videoContainer/videoSlice';\nimport VideoDuration from '../videoDuration/VideoDuration';\n\nfunction generateLink(id) {\n\treturn `https://www.youtube.com/watch?v=${id}`;\n}\n\nexport function GetVideo(props) {\n\tconst { video } = useSelector((state) =>\n\t\tgetVideoByName(state, props.videoTitle)\n\t);\n\treturn (\n\t\t<VideoLink\n\t\t\tchildren={props.children}\n\t\t\tvideo={video}\n\t\t\tshowDuration={props.showDuration}\n\t\t/>\n\t);\n}\n\nexport function SearchVideos(props) {\n\tconst matches = useSelector((state) =>\n\t\tgetVideosWithTitleSubstring(state, props.searchTerm)\n\t);\n\treturn matches.map(({ video }, i) => (\n\t\t<VideoLink\n\t\t\tkey={i}\n\t\t\tchildren={props.children}\n\t\t\tvideo={video}\n\t\t\tshowDuration={props.showDuration}\n\t\t/>\n\t));\n}\n\nexport default function VideoLink(props) {\n\tconst { title, id } = props.video;\n\tconst { showDuration } = props;\n\treturn (\n\t\t<div className={props.classes}>\n\t\t\t<span>{showDuration && <VideoDuration video={props.video} />}</span>\n\t\t\t<a href={generateLink(id)}>{title}</a>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n","import { useState } from 'react';\r\n\r\nimport blockList from './blocklist.json';\r\n\r\nimport { SearchVideos } from '../videoLink/VideoLink';\r\n\r\nconst curateWordList = (words, blockList, threshold) =>\r\n\tObject.entries(words)\r\n\t\t.filter(\r\n\t\t\t([word, count]) => !blockList.includes(word) && count >= threshold\r\n\t\t)\r\n\t\t.sort(([, first], [, second]) => second - first);\r\n\r\nexport default function WordFrequency(props) {\r\n\tconst { words } = props;\r\n\tconst t = 10;\r\n\tconst wordList = curateWordList(words, blockList, t);\r\n\tconst [activeWord, updateWord] = useState(wordList?.[0]?.[0] ?? '');\r\n\tconst wordClicked = ({ target }) => {\r\n\t\tif (target.nodeName === 'STRONG') {\r\n\t\t\ttarget = target.parentElement;\r\n\t\t}\r\n\t\tconst { word } = target.dataset;\r\n\t\tupdateWord(word);\r\n\t};\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h2 id=\"commonWords\">Common words from video titles</h2>\r\n\t\t\t<div className=\"grid gap-2r mb1\" onClick={wordClicked}>\r\n\t\t\t\t{wordList.map(([word, count], i) => (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"button m0\"\r\n\t\t\t\t\t\tdata-word={word}\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<strong>{word}</strong> - {count}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<SearchVideos searchTerm={activeWord} showDuration />\r\n\t\t</section>\r\n\t);\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { getVideosByDuration } from '../videoContainer/videoSlice';\r\nimport VideoLink from '../videoLink/VideoLink';\r\n\r\nexport default function VideosByDuration(props) {\r\n\tconst durationList = useSelector(getVideosByDuration);\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h2 id=\"duration\">Videos by duration</h2>\r\n\t\t\t{durationList.map(({ video }, i) => (\r\n\t\t\t\t<VideoLink\r\n\t\t\t\t\tclasses=\"flex gap-2r first-child-9ch\"\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tvideo={video}\r\n\t\t\t\t\tshowDuration\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</section>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default class UtilTable extends React.Component {\r\n\tattributeNames() {\r\n\t\treturn Object.keys(this.props.data[0]);\r\n\t}\r\n\r\n\trenderRow(object, keys, rowIndex) {\r\n\t\treturn (\r\n\t\t\t<tr key={rowIndex}>\r\n\t\t\t\t{keys.map((key, i) => (\r\n\t\t\t\t\t<td key={i}>{object[key]}</td>\r\n\t\t\t\t))}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\trenderHeaderRow() {\r\n\t\treturn this.props.headers.map((header, i) => <th key={i}>{header}</th>);\r\n\t}\r\n\r\n\trenderTHeadAndTFoot() {\r\n\t\tconst headerRowItems = this.renderHeaderRow();\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>{headerRowItems}</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tfoot>\r\n\t\t\t\t\t<tr>{headerRowItems}</tr>\r\n\t\t\t\t</tfoot>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderTBody(keys) {\r\n\t\treturn (\r\n\t\t\t<tbody>\r\n\t\t\t\t{this.props.data.map((row, i) => this.renderRow(row, keys, i))}\r\n\t\t\t</tbody>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst keys = this.attributeNames();\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t{this.renderTHeadAndTFoot(keys)}\r\n\t\t\t\t{this.renderTBody(keys)}\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n}\r\n","function generateLink(type, id) {\r\n\treturn `https://www.youtube.com/${type}/${id}`;\r\n}\r\n\r\nexport default function ChannelLink(props) {\r\n\tconst { name, type, id } = props.channel;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<a href={generateLink(type, id)}>{name}</a>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UtilTable from '../utilComponents/UtilTable';\r\nimport VideoLink from '../videoLink/VideoLink';\r\nimport VideoDuration from '../videoDuration/VideoDuration';\r\nimport ChannelLink from '../channelLink/ChannelLink';\r\n\r\nimport { getVideos } from '../videoContainer/videoSlice';\r\n\r\nconst prepareData = (videos) => {\r\n\treturn videos.map(({ video, channel }) => {\r\n\t\treturn [\r\n\t\t\t<VideoLink video={video} />,\r\n\t\t\t<VideoDuration video={video} />,\r\n\t\t\t<ChannelLink channel={channel} />,\r\n\t\t];\r\n\t});\r\n};\r\n\r\nexport default function VideoList() {\r\n\tconst videos = useSelector(getVideos);\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h2 id=\"videos\">Your Videos</h2>\r\n\t\t\t<UtilTable\r\n\t\t\t\theaders={['Video', 'Duration', 'Channel']}\r\n\t\t\t\tdata={prepareData(videos)}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t);\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const channelSlice = createSlice({\r\n\tname: 'channels',\r\n\tinitialState: {\r\n\t\tchannels: [],\r\n\t},\r\n\treducers: {\r\n\t\tsetChannelList: (state, { payload }) => {\r\n\t\t\tconst ordered = Object.entries(payload).sort(\r\n\t\t\t\t([, first], [, second]) => first.length - second.length\r\n\t\t\t);\r\n\t\t\tstate.channels = ordered;\r\n\t\t},\r\n\t\taddChannels: (state, action) => {\r\n\t\t\tstate.videos = [...state.videos, ...action.payload];\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setChannelList, addChannels } = channelSlice.actions;\r\n\r\nexport const getChannels = (state) => state.channels.channels;\r\n\r\nexport const getOneVideoChannels = (state) =>\r\n\tstate.channels.channels.filter(([, videos]) => videos.length === 1);\r\nexport const getMultiVideoChannels = (state) =>\r\n\tstate.channels.channels.filter(([, videos]) => videos.length > 1);\r\n\r\nexport default channelSlice.reducer;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { GetVideo } from '../videoLink/VideoLink';\n\nimport { getOneVideoChannels, getMultiVideoChannels } from './channelSlice';\n\nexport default function ChannelContainer() {\n\tconst oneVideoChannels = (\n\t\t<ul>\n\t\t\t{useSelector(getOneVideoChannels).map(\n\t\t\t\t([channelName, videoTitle], i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<GetVideo videoTitle={videoTitle[0]}>\n\t\t\t\t\t\t\t<span> by {channelName}</span>\n\t\t\t\t\t\t</GetVideo>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t)}\n\t\t</ul>\n\t);\n\tconst multiVideoChannels = useSelector(getMultiVideoChannels).map(\n\t\t([channel, videos], i) => {\n\t\t\treturn (\n\t\t\t\t<details open key={i} className=\"mv2 multiVideoChannel\">\n\t\t\t\t\t<summary className=\"mb1 pointer\">\n\t\t\t\t\t\t<h4 className=\"inline\">\n\t\t\t\t\t\t\t[x{videos.length}] {channel}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{videos.map((video, i) => (\n\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t<GetVideo videoTitle={video} showDuration />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t);\n\t\t}\n\t);\n\n\tconst querySetAttribute = (query, attribute, value) => {\n\t\tdocument\n\t\t\t.querySelectorAll(query)\n\t\t\t.forEach((elem) => (elem[attribute] = value));\n\t};\n\n\treturn (\n\t\t<section>\n\t\t\t<h2 id=\"channels\">Your Channels</h2>\n\t\t\t<div className=\"flex flex-equal gap-5r\">\n\t\t\t\t<div>\n\t\t\t\t\t<h3 className=\"mt0\">Channels with only one video</h3>\n\t\t\t\t\t{oneVideoChannels}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3 className=\"mt0\">Channels with multiple videos</h3>\n\t\t\t\t\t<div className=\"flex justify-evenly\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"button m0\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tquerySetAttribute(\n\t\t\t\t\t\t\t\t\t'.multiVideoChannel',\n\t\t\t\t\t\t\t\t\t'open',\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOpen all channel lists\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"button m0\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tquerySetAttribute(\n\t\t\t\t\t\t\t\t\t'.multiVideoChannel',\n\t\t\t\t\t\t\t\t\t'open',\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClose all channel lists\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{multiVideoChannels}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport WordFrequency from '../wordFrequency/WordFrequency';\nimport VideosByDuration from '../videosByDuration/VideosByDuration';\nimport VideoList from '../videoList/VideoList';\nimport ChannelContainer from '../channelContainer/ChannelContainer';\n\nimport { setVideoList } from './videoSlice';\nimport { setChannelList } from '../channelContainer/channelSlice';\n\nconst videoDurationInSeconds = ({ duration: durationString }) => {\n\tif (!durationString) {\n\t\t// If no duration was included\n\t\treturn NaN;\n\t}\n\t// Order reversed to make the format consistent\n\tconst [sec, mins, hours] = durationString.split(':').reverse();\n\tlet duration = parseInt(sec);\n\tduration += parseInt(mins) * 60;\n\tduration += hours ? parseInt(hours) * 3600 : 0;\n\treturn duration;\n};\n\nconst processInput = (videoData) => {\n\tif (!videoData) {\n\t\treturn undefined;\n\t}\n\tconst initialValue = {\n\t\tchannels: {},\n\t\tvideos: [],\n\t\twordFreq: {},\n\t};\n\tconst processedData = videoData.reduce((acc, current) => {\n\t\tconst { channels, wordFreq } = acc;\n\t\tconst channelNames = Object.keys(channels);\n\t\tconst { video, channel } = current;\n\t\tconst { title } = video;\n\t\tconst durationInSeconds = videoDurationInSeconds(video);\n\t\tconst { name } = channel;\n\t\tif (channelNames.includes(name)) {\n\t\t\tchannels[name].push(title);\n\t\t} else {\n\t\t\tchannels[name] = [title];\n\t\t}\n\n\t\tconst titleWords = title\n\t\t\t.toLowerCase()\n\t\t\t.replace(/[+?|~/()!,[\\]—:]|\\s-\\s|\\.+/g, ' ')\n\t\t\t.split(' ');\n\t\tfor (const word of titleWords) {\n\t\t\tconst count = wordFreq[word] || 0;\n\t\t\twordFreq[word] = count + 1;\n\t\t}\n\n\t\tacc.channels = channels;\n\t\tacc.videos.push({ video: { ...video, durationInSeconds }, channel });\n\t\tacc.wordFreq = wordFreq;\n\t\treturn acc;\n\t}, initialValue);\n\n\treturn processedData;\n};\n\nexport default function VideoContainer(props) {\n\tconst dispatch = useDispatch();\n\n\t// Process fresh data\n\tconst processedInputs = processInput(props.videos);\n\n\t// Check for saved data\n\tconst jsonVideo = localStorage.getItem('videos');\n\tconst jsonChannels = localStorage.getItem('channels');\n\tconst jsonWordFreq = localStorage.getItem('wordFreq');\n\n\t// Bail if no data\n\tif (!processedInputs && !(jsonVideo && jsonChannels && jsonWordFreq)) {\n\t\treturn null;\n\t}\n\n\t// Reference fresh data, default to previous\n\tconst videos = processedInputs?.videos ?? JSON.parse(jsonVideo);\n\tconst channels = processedInputs?.channels ?? JSON.parse(jsonChannels);\n\tconst wordFreq = processedInputs?.wordFreq ?? JSON.parse(jsonWordFreq);\n\n\t// Save any fresh data\n\tif (processedInputs) {\n\t\tlocalStorage.setItem('videos', JSON.stringify(videos));\n\t\tlocalStorage.setItem('channels', JSON.stringify(channels));\n\t\tlocalStorage.setItem('wordFreq', JSON.stringify(wordFreq));\n\t}\n\n\tdispatch(setVideoList(videos));\n\tdispatch(setChannelList(channels));\n\tdocument.querySelector('body').classList.add('has-data');\n\n\treturn (\n\t\t<>\n\t\t\t<WordFrequency words={wordFreq} />\n\t\t\t<VideosByDuration />\n\t\t\t<ChannelContainer />\n\t\t\t<VideoList />\n\t\t</>\n\t);\n}\n","const bookmarkletLinkSrc = `<a\n\tclass=\"button\"\n\tdata-testid=\"saveBookmarklet\"\n\thref=\"javascript:( function(){\n\t\tconst sc = document.createElement('script');\n\t\tsc.src = 'https://andrewstanton94.github.io/watchCat/bookmarklet.js';\n\t\tdocument.querySelector('head').append(sc);\n\t})();\"\n>\n\tYouTube Watch later bookmarklet\n</a>`;\nexport default bookmarkletLinkSrc;\n","import React from 'react';\nimport './App.css';\nimport VideoContainer from './features/videoContainer/VideoContainer';\nimport bookmarkletLinkSrc from './bookmarklet.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thash: undefined,\n\t\t\taddNewVideosLabel: 'Add new videos',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// Expecting video information as a URL encoded JSON string starting with the #\n\t\tconst { hash } = document.location;\n\t\tif (hash.length) {\n\t\t\tconst decodedHash = decodeURIComponent(hash.slice(1));\n\t\t\tconst data = JSON.parse(decodedHash);\n\t\t\tthis.setState({\n\t\t\t\thash: data,\n\t\t\t});\n\t\t}\n\t}\n\n\tappendNewWatchListItems(e) {\n\t\te.preventDefault();\n\t\tconst additionalWatchList = document.querySelector(\n\t\t\t'#additionalWatchList'\n\t\t);\n\t\ttry {\n\t\t\tconst newData = JSON.parse(additionalWatchList.value);\n\t\t\tthis.setState({\n\t\t\t\thash: [...this.state.hash, ...newData],\n\t\t\t});\n\t\t\tadditionalWatchList.value = '';\n\t\t\tthis.setState({\n\t\t\t\taddNewVideosLabel: 'Videos added',\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t}\n\t}\n\n\tloadDataFromClipboard() {\n\t\tconst additionalWatchList = document.querySelector(\n\t\t\t'#additionalWatchList'\n\t\t);\n\t\tnavigator.clipboard\n\t\t\t.readText()\n\t\t\t.then((data) => (additionalWatchList.value = data));\n\t}\n\n\tjumpToId({ target }) {\n\t\tconst { href } = target.dataset;\n\t\tdocument.querySelector(href).scrollIntoView();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header flex justify-evenly\">\n\t\t\t\t\t<div className=\"flex flex-column\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<a href=\"https://andrewstanton94.github.io/watchCat/\">\n\t\t\t\t\t\t\t\twatchCat\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>Make sense of your YouTube Watch later list</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a href=\"https://andrewstanton94.github.io/watchCat/\">\n\t\t\t\t\t\t<img src=\"/watchCat/logo.svg\" alt=\"logo\" />\n\t\t\t\t\t</a>\n\t\t\t\t</header>\n\t\t\t\t<div id=\"first-run\" className=\"flex flex-equal gap-5r \">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Set up</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tYou need to add a bookmarklet (a bookmark that runs\n\t\t\t\t\t\t\tsome code) to your browser. Drag the button to your\n\t\t\t\t\t\t\tbookmark bar to save it.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"flex flex-center\"\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t__html: bookmarkletLinkSrc,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tI know this isn't an elegant solution but the{' '}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://developers.google.com/youtube/v3/revision_history#january-28,-2021\"\n\t\t\t\t\t\t\t\trel=\"no-opener no-referrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tYouTube API has been broken for a while and will\n\t\t\t\t\t\t\t\tnot be fixed.\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>How this works</h2>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tGo to your{' '}\n\t\t\t\t\t\t\t\t<a href=\"https://www.youtube.com/playlist?list=WL\">\n\t\t\t\t\t\t\t\t\tYouTube Watch later list\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tScroll down to the bottom of the page. This\n\t\t\t\t\t\t\t\tensures all the videos are loaded.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tThen click the bookmarklet link. The code looks\n\t\t\t\t\t\t\t\tat all the URLs in the list to find the:\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>Video link</li>\n\t\t\t\t\t\t\t\t\t<li>Video Name</li>\n\t\t\t\t\t\t\t\t\t<li>Video duration</li>\n\t\t\t\t\t\t\t\t\t<li>Channel</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tThe script opens this app with the video\n\t\t\t\t\t\t\t\tinformation\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"data\">\n\t\t\t\t\t<nav className=\"p2\" onClick={this.jumpToId}>\n\t\t\t\t\t\t<ul className=\"flex list-none justify-evenly p0\">\n\t\t\t\t\t\t\t<p data-href=\"#add\">Add more videos</p>\n\t\t\t\t\t\t\t<p data-href=\"#commonWords\">Common words</p>\n\t\t\t\t\t\t\t<p data-href=\"#duration\">Videos by duration</p>\n\t\t\t\t\t\t\t<p data-href=\"#channels\">Your Channels</p>\n\t\t\t\t\t\t\t<p data-href=\"#videos\">Your Videos</p>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2 id=\"add\">Add more videos</h2>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tonSubmit={this.appendNewWatchListItems.bind(this)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<fieldset className=\"flex flex-column\">\n\t\t\t\t\t\t\t\t<legend>\n\t\t\t\t\t\t\t\t\tPaste the rest of your Watch list in here\n\t\t\t\t\t\t\t\t</legend>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={this.loadDataFromClipboard}\n\t\t\t\t\t\t\t\t\tclassName=\"button m2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLoad data from the clipboard\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tid=\"additionalWatchList\"\n\t\t\t\t\t\t\t\t\trows=\"10\"\n\t\t\t\t\t\t\t\t\tclassName=\"m2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button className=\"button m2\">\n\t\t\t\t\t\t\t\t\t{this.state.addNewVideosLabel}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</section>\n\t\t\t\t\t<VideoContainer videos={this.state.hash} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport videoSlice from '../features/videoContainer/videoSlice';\r\nimport channelSlice from '../features/channelContainer/channelSlice';\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tcounter: counterReducer,\r\n\t\tvideos: videoSlice,\r\n\t\tchannels: channelSlice,\r\n\t},\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}